#ifdef IN_IDE_PARSER
#include "server.h++"
#endif

#include <functional>


template <typename GatewayProtocol, typename ControllerProtocol, typename ThreadingPolicy>
inline server<GatewayProtocol, ControllerProtocol, ThreadingPolicy>::server(gnutls::credentials&& c, gnutls::priorities&& p) :
	credentials_(std::move(c)),
	priorities_(std::move(p)),
	io_(),
	signal_{io_},
	netdevice_{io_, std::bind(&server::send_remote, this, std::placeholders::_1), std::bind(&server::received_local, this, std::placeholders::_1)},
	session_builder_(io_, credentials_, priorities_),
	gateway_(io_, session_builder_, std::bind(&server::send_local, this, std::placeholders::_1), std::bind(&server::received_remote, this, std::placeholders::_1))
{
	int a = 9;

	ThreadingPolicy::run(std::bind(static_cast<std::size_t(boost::asio::io_service::*)()>(&boost::asio::io_service::run), std::ref(io_)));
}

template <typename GatewayProtocol, typename ControllerProtocol, typename ThreadingPolicy>
inline server<GatewayProtocol, ControllerProtocol, ThreadingPolicy>::~server() {
// 	run();ThreadingPolicy
}

